# ==================================================================================================
# Copyright 2013 Twitter, Inc.
# --------------------------------------------------------------------------------------------------
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this work except in compliance with the License.
# You may obtain a copy of the License in the LICENSE file, or at:
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==================================================================================================

__author__ = 'tdesai'

import imp
import os
import unittest

from twitter.pants import get_buildroot
from twitter.pants.base.context_utils import create_context


sample_ini_test_1 = """
[DEFAULT]
pants_workdir: /tmp/pants.d
pants_supportdir: /tmp/build-support
"""


class ArgsResourceMapperTest(unittest.TestCase):
  @classmethod
  def setUpClass(cls):
    cls.args = imp.load_source('args', os.path.join(get_buildroot(), 'BUILD.commons'))

  @classmethod
  def tearDownClass(cls):
    #Remove the byte code generated by imp.load_source since,
    #Pants Build_file tries to parse it for next pants run and chokes on it
    path = os.path.join(get_buildroot(), 'BUILD.commonsc')
    if os.path.exists(path):
      os.remove(path)

  def test_args_resource_mapping_init(self):
    options = {'args_resource_mapper_include_all': False}
    args_mapping = self.args.ArgsResourceMapper(create_context(config=sample_ini_test_1,
                                                               options=options),
                                                select_targets=[],
                                                transitive=None,
                                                main="org.Main")
    self.assertEquals(args_mapping.classdirs, ['/tmp/pants.d/javac/classes'])
