# buildroot, homedir and user are assumed to be seeded in the config

[DEFAULT]
pants_workdir: %(buildroot)s/.pants.d
pants_supportdir: %(buildroot)s/build-support
pants_distdir: %(buildroot)s/dist
pants_pythons: %(buildroot)s/.python
confs: ['default']
max_subprocess_args: 100

scala_workdir: %(pants_workdir)s/scalac
java_workdir: %(pants_workdir)s/javac


[goals]
bootstrap_buildfiles: [
    # This will pick up the whole top level BUILD file family, including BUILD.commons
    '%(buildroot)s/BUILD',
  ]
logdir: /tmp/%(user)s/goals


[tasks]
build_cache: %(pants_workdir)s/build_cache


[nailgun]
workdir: %(pants_workdir)s/ng
supportdir: %(pants_supportdir)s/ng
jar: %(supportdir)s/lib/nailgun-0.7.1.jar
args: ['-Xmx2g', '-XX:MaxPermSize=256m']


[ivy]
supportdir: %(pants_supportdir)s/ivy
classpath: ['%(supportdir)s/lib/ivy-2.2.0.jar']
ivy_settings: %(supportdir)s/ivysettings.xml


[ivy-profiles]
workdir: %(pants_supportdir)s/profiles


[ivy-resolve]
workdir: %(pants_workdir)s/classpath
nailgun_dir: %(pants_workdir)s/ng/ivy
profile: xalan
cache_dir: %(homedir)s/.ivy2/twitter-commons
transitive: True
args: []


[thrift-gen]
workdir: %(pants_workdir)s/thrift
supportdir: %(pants_supportdir)s/bin/thrift
strict: False
verbose: False
version: 0.5.0-finagle
java: {
    'gen': 'java:hashcode',
    'deps': ['3rdparty:thrift-%(version)s']
  }
python: {
    'gen': 'py:newstyle',
    'deps': ['3rdparty/python:thrift-0.7']
  }


[protobuf-gen]
workdir: %(pants_workdir)s/protobuf
supportdir: %(pants_supportdir)s/bin/protobuf
version: 2.3.0
javadeps: ['3rdparty:protobuf-%(version)s']
pythondeps: []


[checkstyle]
workdir: %(pants_workdir)s/checkstyle
profile: checkstyle
nailgun_dir: %(pants_workdir)s/ng/%(profile)s
configuration: %(pants_supportdir)s/checkstyle/coding_style.xml
properties: {
    'checkstyle.suppression.files': ','.join([
      '%(pants_supportdir)s/commons/checkstyle/checkstyle_suppressions.xml',
    ])
  }


[java-compile]
workdir: %(java_workdir)s


# jmake setup
#
jmake-profile: jmake
nailgun_dir: %(pants_workdir)s/ng/%(jmake-profile)s

args: [
    '-C-encoding', '-CUTF-8',
    '-C-g',
  ]
warning_args: [
    '-C-Xlint:all', '-C-Xlint:-serial', '-C-Xlint:-path',
    '-C-deprecation',
  ]
no_warning_args: [
    '-C-Xlint:none',
    '-C-nowarn',
  ]

compiler-profile: twitter-compiler


[scala-compile]
workdir: %(scala_workdir)s

# TODO(John Sirois): Merge profiles into standard pants deps when ant backend is gone.
compile-profile: scala-compile-2.8.1
scaladeps: ['3rdparty:scala-library']

nailgun_dir: %(pants_workdir)s/ng/%(compile-profile)s
main: scala.tools.nsc.Main
args: [
    '-encoding', 'UTF-8',
    '-g:vars',
  ]
warning_args: [
    '-deprecation',
  ]
no_warning_args: [
    '-nowarn',
  ]


[jvm]
debug_args: ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']


[jvm-run]
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[scala-repl]
profile: scala-repl-2.8.1
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m', '-Dscala.usejavacp=true' ]
main: scala.tools.nsc.MainGenericRunner


[junit-run]
workdir: %(pants_workdir)s/junit
profile: junit
args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[specs-run]
workdir: %(pants_workdir)s/specs
profile: scala-specs-2.8.1
args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[javadoc-gen]
workdir: %(pants_workdir)s/javadoc


[markdown-to-html]
workdir: %(pants_workdir)s/markdown
code-style: friendly
extensions: ['.md', '.markdown']


[jar-create]
workdir: %(pants_workdir)s/jars


[binary-create]
outdir: %(pants_distdir)s


[args-resource-mapper]:
classdirs: [ '%(java_workdir)s/classes', '%(scala_workdir)s' ]


[bundle-create]
outdir: %(pants_distdir)s


[python-setup]
cache: %(pants_workdir)s/.pip.cache
artifact_cache: %(pants_workdir)s/py_artifact_cache
virtualenv_target: %(cache)s/virtualenv-1.7
virtualenv_urls: ['http://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.7.tar.gz']
repos: ['http://pypi.python.org/simple']
indices: ['http://pypi.python.org/simple']
bootstrap_packages: [
  'pip',
  'mako']
